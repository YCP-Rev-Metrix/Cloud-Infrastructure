name: .NET

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/hosted-autogenerated'
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: ./Server/bin/Debug/net7.0/
    - name: Test
      run: dotnet test --no-build --verbosity normal

  generate-swagger:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
    steps:
    - name: Install Swashbuckle CLI
      run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version 6.5.0
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: ./Server/bin/Debug/net7.0/
    - name: Generate OpenAPI document
      run: ~/.dotnet/tools/swagger tofile --output ./swagger.json ./Server/bin/Debug/net7.0/Server.dll v1
    - name: Upload OpenAPI document
      uses: actions/upload-artifact@v2
      with:
        name: OpenAPI
        path: ./swagger.json

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [build]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} 
             -p '${{ secrets.DOCKER_PASS }}'
      - name: Build Docker image
        run: |
          echo "REPO - $REPO"
          echo "GITHUB_SHA (first 8 characters) - ${GITHUB_SHA::8}"
          docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push $REPO

  redeploy:
    name: Redeploy webhook call
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}

  delay:
    runs-on: ubuntu-latest
    needs: [redeploy]
    steps:
    - name: Wait for 1 minute
      run: sleep 60

  test-endpoint:
    runs-on: ubuntu-latest
    needs: [delay]
    steps:
    - name: Check Endpoint
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" https://api.revmetrix.io/api/Test/TestTime)
        if [ "$response" == "200" ]; then
          echo "Endpoint returned 200 OK"
          exit 0
        else
          echo "Endpoint returned $response"
          exit 1
        fi
